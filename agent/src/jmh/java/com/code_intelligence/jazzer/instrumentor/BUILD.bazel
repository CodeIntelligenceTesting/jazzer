load("@io_bazel_rules_kotlin//kotlin:jvm.bzl", "kt_jvm_library")

java_binary(
    name = "CoverageInstrumentationBenchmark",
    main_class = "org.openjdk.jmh.Main",
    runtime_deps = [
        ":coverage_instrumentation_benchmark",
    ],
)

java_test(
    name = "CoverageInstrumentationBenchmarkTest",
    args = [
        # Fail fast on any exceptions produced by benchmarks.
        "-foe true",
        "-wf 1",
        "-f 1",
        "-wi 1",
        "-i 1",
        "-r 1s",
        "-w 1s",
    ],
    jvm_flags = [
        "-XX:CompileCommand=print,*CoverageMap.recordCoverage",
    ],
    main_class = "org.openjdk.jmh.Main",
    # Directly invoke JMH's main without using a testrunner.
    use_testrunner = False,
    runtime_deps = [
        ":coverage_instrumentation_benchmark",
    ],
)

java_library(
    name = "coverage_instrumentation_benchmark",
    srcs = ["CoverageInstrumentationBenchmark.java"],
    plugins = [":JmhGeneratorAnnotationProcessor"],
    runtime_deps = [
        "@maven//:com_mikesamuel_json_sanitizer",
    ],
    deps = [
        ":kotlin_strategies",
        ":strategies",
        "//agent/src/main/java/com/code_intelligence/jazzer/instrumentor",
        "@maven//:org_openjdk_jmh_jmh_core",
    ],
)

java_library(
    name = "strategies",
    srcs = [
        "DirectByteBuffer2CoverageMap.java",
        "DirectByteBufferCoverageMap.java",
        "Unsafe2CoverageMap.java",
        "UnsafeBranchfreeCoverageMap.java",
        "UnsafeCoverageMap.java",
        "UnsafeSimpleIncrementCoverageMap.java",
    ],
    deps = [
        "//agent/src/main/java/com/code_intelligence/jazzer/instrumentor",
        "@jazzer_jacoco//:jacoco_internal",
        "@org_ow2_asm_asm//jar",
    ],
)

kt_jvm_library(
    name = "kotlin_strategies",
    srcs = ["DirectByteBufferStrategy.kt"],
    deps = [
        "//agent/src/main/java/com/code_intelligence/jazzer/instrumentor",
        "@jazzer_jacoco//:jacoco_internal",
        "@org_ow2_asm_asm//jar",
    ],
)

java_plugin(
    name = "JmhGeneratorAnnotationProcessor",
    processor_class = "org.openjdk.jmh.generators.BenchmarkProcessor",
    deps = ["@maven//:org_openjdk_jmh_jmh_generator_annprocess"],
)
