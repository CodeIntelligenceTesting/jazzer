load("@rules_jvm_external//:defs.bzl", "java_export")
load("//:maven.bzl", "JAZZER_API_COORDINATES", "JAZZER_COORDINATES")
load("//bazel:compat.bzl", "SKIP_ON_WINDOWS")

java_export(
    name = "jazzer-api",
    maven_coordinates = JAZZER_API_COORDINATES,
    pom_template = "//deploy:jazzer-api.pom",
    visibility = ["//visibility:public"],
    runtime_deps = ["//agent/src/main/java/com/code_intelligence/jazzer/api"],
)

java_export(
    name = "jazzer",
    maven_coordinates = JAZZER_COORDINATES,
    pom_template = "jazzer.pom",
    # Do not generate an implicit javadocs target - the current target is based on the shaded deploy
    # JAR, for which the docs JAR generated by default would be empty.
    tags = ["no-javadocs"],
    visibility = ["//visibility:public"],
    runtime_deps = [
        "//driver/src/main/java/com/code_intelligence/jazzer:jazzer_import",
    ],
)

alias(
    name = "jazzer-docs",
    actual = "//driver/src/main/java/com/code_intelligence/jazzer:jazzer-docs",
)

alias(
    name = "jazzer-sources",
    actual = "//driver/src/main/java/com/code_intelligence/jazzer:jazzer-sources",
)

alias(
    name = "jazzer-junit.publish",
    actual = "//driver/src/main/java/com/code_intelligence/jazzer/junit:junit.publish",
)


sh_test(
    name = "jazzer_artifact_test",
    srcs = ["jazzer_artifact_test.sh"],
    args = ["$(rootpath :jazzer)"],
    data = [
        ":jazzer",
        "@local_jdk//:bin/jar",
    ],
    tags = [
        # Coverage instrumentation necessarily adds files to the jar that we
        # wouldn't want to release and thus causes this test to fail.
        "no-coverage",
    ],
    target_compatible_with = SKIP_ON_WINDOWS,
)

exports_files([
    "jazzer-api.pom",
    "jazzer-junit.pom",
])
