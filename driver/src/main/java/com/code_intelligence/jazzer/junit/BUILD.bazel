load("@fmeum_rules_jni//jni:defs.bzl", "java_jni_library")
load("@rules_jvm_external//:defs.bzl", "java_export")
load("//:maven.bzl", "JAZZER_JUNIT_COORDINATES")
load("//bazel:compat.bzl", "SKIP_ON_WINDOWS")

java_export(
    name = "junit",
    # Exclude the unshaded classes comprising com.code-intelligence:jazzer since the java_library
    # target comprising jazzer-junit depend on the individual libraries, not the shaded jar.
    deploy_env = ["//driver/src/main/java/com/code_intelligence/jazzer:jazzer_lib"],
    maven_coordinates = JAZZER_JUNIT_COORDINATES,
    pom_template = "//deploy:jazzer-junit.pom",
    visibility = ["//visibility:public"],
    runtime_deps = [
        ":fuzz_test",
        ":jazzer_test_engine",
    ],
)

# Workaround for https://github.com/bazelbuild/bazel/issues/15043
filegroup(
    name = "junit_jar",
    srcs = [":junit"],
)

sh_test(
    name = "junit_artifact_test",
    srcs = ["junit_artifact_test.sh"],
    args = [
        "$(rootpath :junit_jar)",
    ],
    data = [
        ":junit_jar",
        "@local_jdk//:bin/jar",
    ],
    tags = [
        # Coverage instrumentation necessarily adds files to the jar that we
        # wouldn't want to release and thus causes this test to fail.
        "no-coverage",
    ],
    target_compatible_with = SKIP_ON_WINDOWS,
)

java_library(
    name = "agent_configurator",
    srcs = [
        "AgentConfigurator.java",
    ],
    deps = [
        ":utils",
        "//sanitizers/src/main/java/com/code_intelligence/jazzer/sanitizers:constants",
        "@maven//:org_junit_jupiter_junit_jupiter_api",
        "@maven//:org_junit_platform_junit_platform_engine",
    ],
)

java_jni_library(
    name = "fuzz_test",
    srcs = [
        "FuzzTest.java",
        "RegressionTestArgumentProvider.java",
        "RegressionTestExtensions.java",
    ],
    native_libs = [
        "//driver/src/main/native/com/code_intelligence/jazzer/driver:jazzer_driver",
    ],
    visibility = [
        "//examples/junit/src/test/java/com/example:__pkg__",
    ],
    deps = [
        ":agent_configurator",
        ":utils",
        "//agent/src/main/java/com/code_intelligence/jazzer/agent:agent_installer",
        "//agent/src/main/java/com/code_intelligence/jazzer/api",
        "//driver/src/main/java/com/code_intelligence/jazzer/autofuzz",
        "//driver/src/main/java/com/code_intelligence/jazzer/driver:fuzzed_data_provider_impl",
        "//driver/src/main/java/com/code_intelligence/jazzer/driver:opt",
        "@maven//:org_junit_jupiter_junit_jupiter_api",
        "@maven//:org_junit_jupiter_junit_jupiter_params",
        "@maven//:org_junit_platform_junit_platform_commons",
    ],
)

java_library(
    name = "jazzer_test_engine",
    srcs = [
        "JazzerFuzzTestExecutor.java",
        "JazzerTestEngine.java",
    ],
    resources = [
        "//driver/src/main/resources:jazzer_test_engine_service",
    ],
    visibility = ["//driver/src/test/java/com/code_intelligence/jazzer/junit:__pkg__"],
    deps = [
        ":agent_configurator",
        ":fuzz_test",
        ":utils",
        "//agent/src/main/java/com/code_intelligence/jazzer/agent:agent_installer",
        "//agent/src/main/java/com/code_intelligence/jazzer/api",
        "//agent/src/main/java/com/code_intelligence/jazzer/utils",
        "//driver/src/main/java/com/code_intelligence/jazzer:constants",
        "//driver/src/main/java/com/code_intelligence/jazzer/driver:fuzz_target_runner",
        "@maven//:org_junit_jupiter_junit_jupiter_api",
        "@maven//:org_junit_platform_junit_platform_commons",
        "@maven//:org_junit_platform_junit_platform_engine",
    ],
)

java_library(
    name = "utils",
    srcs = ["Utils.java"],
)
