name: CI Main
on:
  push:
    branches: [ main ]
  merge_group:

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:

  test_junit_springboot:
    name: Spring Boot
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17
      - name: Run Spring Boot example
        # The Spring Boot example project is built with Maven. The shell script builds the project
        # against the local version of Jazzer and runs its unit and fuzz tests.
        # Spring version 6 requires JDK 17.
        run: |
          cd examples/junit-spring-web
          ./build-and-run-tests.sh
        shell: bash

  build_and_test:
    runs-on: ${{ matrix.os }}
    name: Build & Test
    strategy:
      matrix:
        os: [ selfhosted-macos, windows-2019 ]
        # Test JDK 8 on Windows and mac only on main.
        jdk: [8]
        include:
          - os: selfhosted-macos
            arch: "macos-arm64"
            bazel_args: "--xcode_version_config=//.github:host_xcodes"
          - os: windows-2019
            arch: "windows"

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 21

      # The java binary has the necessary entitlements to allow tests to pass, but that requires
      # user interaction (clicking through Gatekeeper warnings) that we can't simulate in CI.
      - name: Remove codesign signature on java binary
        if: contains(matrix.os, 'mac')
        run: codesign --remove-signature "$JAVA_HOME"/bin/java

      - name: Set Build Buddy config
        run: .github/scripts/echoBuildBuddyConfig.sh ${{ secrets.BUILDBUDDY_API_KEY }} >> $GITHUB_ENV
        shell: bash

      - name: Build & Test
        run: bazelisk test ${{env.BUILD_BUDDY_CONFIG}} --java_runtime_version=remotejdk_${{ matrix.jdk }} ${{ matrix.bazel_args }} ${{ matrix.extra_bazel_args }} --build_tag_filters="-no-${{ matrix.arch }}-jdk${{ matrix.jdk }},-no-jdk${{ matrix.jdk }}" --test_tag_filters="-no-${{ matrix.arch }}-jdk${{ matrix.jdk }},-no-jdk${{ matrix.jdk }}" //...

      - name: Copy Bazel log
        if: always()
        shell: bash
        run: cp "$(readlink bazel-out)"/../../../java.log* .

      - name: Upload test logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: testlogs-${{ matrix.arch }}-${{ matrix.jdk }}
          # https://github.com/actions/upload-artifact/issues/92#issuecomment-711107236
          path: |
            bazel-testlogs*/**/test.log
            java.log*
